::  The basic type that stores a single "escrow bond". 
::  These are generated by the  contracts %new-bond action.
::  The designated custodian is responsible for awarding funds.
::
::  A subtype used to hold information about an asset held in escrow.
::  The contract only supports standard tokens currently.
::
::  The standard token metadata type copied from the fungible token standard.


+$  bond
  $:  custodian=address
      timelock=@ud  ::  measured in eth blocks
      =escrow-asset
      depositors=(pmap address [amount=@ud account=id])
  ==


+$  escrow-asset
  $:  contract=id
      metadata=id
      amount=@ud
      account=(unit id)
  ==
  
  
::
::  standard fungible token metadata
::
+$  token-metadata
  $:  name=@t
      symbol=@t
      decimals=@ud
      supply=@ud
      cap=(unit @ud)
      mintable=?
      minters=(pset address)
      deployer=address
      salt=@
  ==

::  Action (you can call it anything) is the type mold that calldata must fit.
::  This contract permits 4 actions, shown here:
::
::  First, a bond is created with %new-bond. Then, anyone can %deposit the
::  proper asset. The designated custodian address can %award funds in the 
::  bond however they desire, as long as it happens before the timelock.
::  After the timelock (represented in ETH block height) is up, if %award 
::  has not been performed, anyone can call %release to return all deposited
::  funds to their original depositors.

+$  action
  $%  ::  create a new bond held by this contract.
      ::  sets escrow asset but not amount or depositors
      [%new-bond custodian=address timelock=@ud asset-metadata=id]
      ::  become a depositor in a bond -- caller must first
      ::  set appropriate allowance for this contract
      [%deposit bond-id=id amount=@ud account=id]
      ::  as a custodian, award tokens held in escrow to chosen address
      ::  total amount awarded *must* add up to amount of tokens held
      ::  note that addresses do *not* need to have been depositors
      [%award bond-id=id to=(list [=address amount=@ud account=(unit id)])]
      ::  anyone can submit -- returns all funds to depositors
      ::  if the bond's timelock has passed and tokens have not
      ::  been awarded.
      [%release bond-id=id]
  ==
